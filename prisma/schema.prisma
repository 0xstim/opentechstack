generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String       @id @default(cuid())
  name             String?
  username         String?      @unique
  email            String?      @unique
  emailVerified    DateTime?
  image            String?
  currentChallenge String?
  credentials      Credential[]
  accounts         Account[]
  sessions         Session[]
}

model Credential {
  id                   String   @id @default(cuid())
  user                 User     @relation(fields: [userId], references: [id])
  userId               String
  name                 String?
  credentialID         Bytes   @unique
  credentialPublicKey  Bytes    @unique
  credentialDeviceType String?
  credentialBackedUp   Boolean  @default(false)
  transports           String[]
  counter              Int      @default(0)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([credentialID])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
