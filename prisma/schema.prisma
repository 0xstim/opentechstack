generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Lists_Investors {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(255)
  tags        Json
  description String
  website     String   @db.VarChar(200)
  telegram    String   @db.VarChar(200)
  twitter     String   @db.VarChar(200)
  email       String   @db.VarChar(254)
  linkedin    String   @db.VarChar(200)
  facebook    String   @db.VarChar(200)
  instagram   String   @db.VarChar(200)
  youtube     String   @db.VarChar(200)
  discord     String   @db.VarChar(200)
  github      String   @db.VarChar(200)
  tiktok      String   @db.VarChar(200)
  medium      String   @db.VarChar(200)
  reddit      String   @db.VarChar(200)
  crunchbase  String   @db.VarChar(200)
  angelco     String   @db.VarChar(200)
  updated_at  DateTime @updatedAt
  created_at  DateTime @default(now())
}

model Lists_Wallets {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(255)
  chains      Json
  tech        Json
  description String
  website     String   @db.VarChar(200)
  telegram    String   @db.VarChar(200)
  twitter     String   @db.VarChar(200)
  email       String   @db.VarChar(254)
  linkedin    String   @db.VarChar(200)
  facebook    String   @db.VarChar(200)
  instagram   String   @db.VarChar(200)
  youtube     String   @db.VarChar(200)
  discord     String   @db.VarChar(200)
  github      String   @db.VarChar(200)
  tiktok      String   @db.VarChar(200)
  medium      String   @db.VarChar(200)
  reddit      String   @db.VarChar(200)
  updated_at  DateTime @updatedAt
  created_at  DateTime @default(now())
}

model Lists_Jobs {
  id                 String   @id @default(cuid())
  job_title          String   @db.VarChar(255)
  tags               Json
  description        String
  company_name       String   @db.VarChar(255)
  company_website    String   @db.VarChar(200)
  job_location       String   @db.VarChar(255)
  apply_here         String   @db.VarChar(200)
  contact_email      String   @db.VarChar(254)
  salary_currency    String   @db.VarChar(255)
  salary_lower_bound String   @db.VarChar(255)
  salary_upper_bound String   @db.VarChar(255)
  updated_at         DateTime @updatedAt
  created_at         DateTime @default(now())
}
